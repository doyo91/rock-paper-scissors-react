{"version":3,"sources":["context/ScoreContext.js","components/Score/index.js","components/Header/index.js","components/Wrapper/index.js","components/Chip/index.js","components/Button/index.js","components/Table/index.js","components/Rules/index.js","App.js","index.js"],"names":["ScoreContext","React","createContext","ScoreContextProvider","children","useState","score","setScore","Provider","value","ScoreStyled","styled","div","Score","useContext","HeaderStyled","Header","WrapperStyled","Wrapper","shadow","keyframes","box","ChipStyled","name","color","base","border","isShadowAnimated","playing","colors","paper","rock","scissors","default","Chip","onClick","className","src","alt","ButtonStyled","Button","props","WhiteButton","TableStyled","results","elements","Table","housePick","setHousePick","setPlaying","pick","setPick","setResults","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","playResults","undefined","RulesStyled","visible","Rules","setVisible","handleToggleClick","AppStyled","main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b224815.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nexport const ScoreContext = React.createContext();\r\n\r\nexport const ScoreContextProvider = ({ children }) => {\r\n    const [score, setScore] = useState(0);\r\n  return (\r\n  <ScoreContext.Provider value={{score, setScore}}>{children}</ScoreContext.Provider>\r\n  )\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ScoreContext } from \"context/ScoreContext\";\r\n\r\nconst ScoreStyled = styled.div`\r\n  background: white;\r\n  text-align: center;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  width: 80px;\r\n  small {\r\n    color: #2a45c2;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n  }\r\n  p {\r\n    color: #565468;\r\n    font-size: 40px;\r\n    margin: 0;\r\n    font-weight: 700;\r\n    position: relative;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 150px;\r\n    small {\r\n      font-size: 16px;\r\n    }\r\n\r\n    p {\r\n      font-size: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Score = () => {\r\n  const { score } = useContext(ScoreContext);\r\n\r\n  return (\r\n    <ScoreStyled>\r\n      <small>Score</small>\r\n      <p>{score}</p>\r\n    </ScoreStyled>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Score } from \"components/Score\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  color: white;\r\n  padding: 12px 12px 12px 23px;\r\n  border-radius: .5em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 3px solid rgba(255, 255, 255, 0.29);\r\n  \r\n  h1 {\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      line-height: 16px;\r\n      font-weight: 700;\r\n      font-size: 21px;\r\n      margin: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n      padding: 24px;\r\n\r\n    h1 {\r\n      font-size: 36px;\r\n      line-height: .9;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <HeaderStyled>\r\n      <h1>Rock <br/> Paper <br/> Scissors</h1>\r\n      <Score />\r\n    </HeaderStyled>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n    max-width: 700px;\r\n    margin: auto;\r\n`\r\n\r\nexport const Wrapper = ({children}) => {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n\r\nconst shadow = keyframes`\r\n  to {\r\n    box-shadow: 0 0 0 40px rgba(255,255,255, .04), 0 0 0 80px rgba(255,255,255, .03), 0 0 0 120px rgba(255,255,255, .02);\r\n    transform:  scale(1.1);\r\n  }\r\n`\r\nconst box = keyframes`\r\n  to {\r\n    transform: rotateY(360deg);\r\n  }\r\n`\r\n\r\nconst ChipStyled = styled.div`\r\n  width: 130px;\r\n  height: 125px;\r\n  padding: ${({ name }) => (name === \"default\" ? \"16px\" : \"0\")};\r\n  border: 16px solid ${({ color }) => color.base};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  box-shadow: 0 5px 0 ${({ color }) => color.border};\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 2;\r\n\r\n  ${({isShadowAnimated}) => isShadowAnimated && 'box-shadow: 0 0 0 0px rgba(255,255,255, .04), 0 0 0 0px rgba(255,255,255, .03), 0 0 0 0px rgba(255,255,255, .02);' }\r\n  \r\n  animation: 1s ${({isShadowAnimated}) => isShadowAnimated ? shadow : ''} forwards;\r\n  /*  infinte animation */\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n\r\n\r\n\r\n  .box {\r\n    background: ${({ name }) => (name === \"default\" ? \"#122343\" : \"white\")};\r\n    box-shadow: 0 -4px 0 ${({ name }) =>\r\n      name === \"default\" ? \"transparent\" : \"#babfd4\"};\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    align-self: stretch;\r\n    img {\r\n      width: 40%;\r\n      animation: 1s ${({ isShadowAnimated }) => isShadowAnimated ? box : ''};\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    ${({ playing }) => playing ? 'width: 300px; height: 295px; border-width: 32px;' : 'width: 200px; height: 195px;'}\r\n  }\r\n`;\r\n\r\nconst colors = {\r\n  paper: {\r\n    base: \"#516ef4\",\r\n    border: \"#2543c3\",\r\n  },\r\n  rock: {\r\n    base: \"#de3a5a\",\r\n    border: \"#980e31\",\r\n  },\r\n  scissors: {\r\n    base: \"#eca81e\",\r\n    border: \"#c76c14\",\r\n  },\r\n  default: {\r\n    base: \"transparent\",\r\n    border: \"transparent\",\r\n  },\r\n};\r\n\r\nexport const Chip = ({ name = \"default\", onClick, isShadowAnimated = false, playing }) => {\r\n  function handleClick() {\r\n    if (onClick) {\r\n      onClick(name);\r\n    }\r\n  }\r\n\r\n  const color = colors[name];\r\n\r\n  return (\r\n    <ChipStyled color={color} onClick={handleClick} name={name} isShadowAnimated={isShadowAnimated} playing={playing} >\r\n      <div className=\"box\">\r\n        <img src={`./images/icon-${name}.svg`} alt=\"\" />\r\n      </div>\r\n    </ChipStyled>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonStyled = styled.div`\r\n  display: inline-flex;\r\n  border: 1px solid white;\r\n  border-radius: .5em;\r\n  min-width: 128px;\r\n  padding: .7em;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2.5px;\r\n\r\n  :hover {\r\n    background: white;\r\n    color: #101a3f;\r\n  }\r\n`;\r\n\r\nexport const Button = ({ children, ...props }) => {\r\n  return <ButtonStyled {...props}>{children}</ButtonStyled>;\r\n};\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n  background: white;\r\n  color: #101a3f;\r\n  min-width: 220px;\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Chip } from \"components/Chip\";\r\nimport { WhiteButton } from \"components/Button\";\r\nimport { ScoreContext } from \"context/ScoreContext\";\r\n\r\nconst TableStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 130px);\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px;\r\n  margin: 2em 0;\r\n  position: relative;\r\n\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2;\r\n  }\r\n\r\n  .in-game {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 0.8em;\r\n    font-weight: 700;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  .results {\r\n    text-align: center;\r\n\r\n    h2 {\r\n      text-transform: uppercase;\r\n      font-size: 56px;\r\n      margin: 10px;\r\n    }\r\n  }\r\n\r\n  .line {\r\n    display: ${({ playing }) => (!playing ? \"block\" : \"none\")};\r\n    height: 14px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    position: absolute;\r\n    width: 220px;\r\n    top: 58px;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      height: 14px;\r\n      background: rgba(0, 0, 0, 0.2);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      transform: rotate(55deg);\r\n      transform-origin: left top;\r\n    }\r\n    &::after {\r\n      content: \"\";\r\n      height: 14px;\r\n      background: rgba(0, 0, 0, 0.2);\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      transform: rotate(-55deg);\r\n      transform-origin: right top;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    grid-template-columns: 300px 300px;\r\n    ${({ playing, results }) =>\r\n      (playing && results) && \"grid-template-columns: 300px 110px 110px 300px;\"}\r\n\r\n    & div:nth-of-type(3) {\r\n      ${({ playing, results }) =>\r\n        (playing && results) && \"grid-column: 2 / 4; grid-row: 1;\"}\r\n    }\r\n    .line {\r\n      width: 300px;\r\n    }\r\n    .results {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .in-game {\r\n      font-size: 1.2em;\r\n      display: flex;\r\n      flex-direction: column;\r\n      > div {\r\n        order: 2;\r\n      }\r\n      > p {\r\n        order: 1;\r\n        margin-bottom: 2em;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst elements = [\"paper\", \"scissors\", \"rock\"];\r\n\r\nexport const Table = () => {\r\n  const [housePick, setHousePick] = useState(\"default\");\r\n  const [playing, setPlaying] = useState(false);\r\n  const [pick, setPick] = useState(\"\");\r\n  const [results, setResults] = useState(\"\");\r\n  const { score, setScore } = useContext(ScoreContext);\r\n\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n\r\n  function launchHousePick() {\r\n    return new Promise((resolve, reject) => {\r\n      let pick;\r\n      const interval = setInterval(() => {\r\n        pick = elements[getRandomInt(0, 3)];\r\n        setHousePick(pick);\r\n      }, 75);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        resolve(pick);\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  async function onClick(name) {\r\n    setPlaying(true);\r\n    setPick(name);\r\n\r\n    const house = await launchHousePick();\r\n    const results = playResults(name, house);\r\n    setResults(results);\r\n    if (results === \"win\") {\r\n      setScore(score + 1);\r\n    }\r\n  }\r\n\r\n  function playResults(pick, housePick) {\r\n    if (housePick === pick) {\r\n      return \"draw\";\r\n    }\r\n\r\n    if (pick === \"paper\") {\r\n      if (housePick === \"scissors\") {\r\n        return \"lose\";\r\n      }\r\n      if (housePick === \"rock\") {\r\n        return \"win\";\r\n      }\r\n    }\r\n\r\n    if (pick === \"scissors\") {\r\n      if (housePick === \"paper\") {\r\n        return \"win\";\r\n      }\r\n\r\n      if (housePick === \"rock\") {\r\n        return \"lose\";\r\n      }\r\n    }\r\n\r\n    if (pick === \"rock\") {\r\n      if (housePick === \"paper\") {\r\n        return \"lose\";\r\n      }\r\n      if (housePick === \"scissors\") {\r\n        return \"win\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleTryAgainClick() {\r\n    setPlaying(false);\r\n    setResults(\"\");\r\n  }\r\n\r\n  return (\r\n    <TableStyled playing={playing} results={(results !== \"\") ? 1 : undefined}>\r\n      <span className=\"line\"></span>\r\n      {!playing ? (\r\n        <>\r\n          <Chip name=\"paper\" onClick={onClick} />\r\n          <Chip name=\"scissors\" onClick={onClick} />\r\n          <Chip name=\"rock\" onClick={onClick} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"in-game\">\r\n            <Chip\r\n              playing={playing}\r\n              name={pick}\r\n              isShadowAnimated={results === \"win\"}\r\n            />\r\n            <p>You Picked</p>\r\n          </div>\r\n          <div className=\"in-game\">\r\n            <Chip\r\n              playing={playing}\r\n              name={housePick}\r\n              isShadowAnimated={results === \"lose\"}\r\n            />\r\n            <p>The house Picked</p>\r\n          </div>\r\n          <div className=\"results\">\r\n            {results && (\r\n              <>\r\n                <h2>You {results}</h2>\r\n                <WhiteButton onClick={handleTryAgainClick}>\r\n                  Try Again\r\n                </WhiteButton>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </TableStyled>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"components/Button\";\r\n\r\nconst RulesStyled = styled.div`\r\n  text-align: center;\r\n\r\n  &::before {\r\n    content: '';\r\n    display: ${({ visible }) => visible ? 'block' : 'none'};\r\n    position: absolute;\r\n    z-index: 2;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    background: rgba(0,0,0,.6);\r\n    }\r\n\r\n  .close-btn {\r\n    padding: 1em;\r\n    margin-top: 2em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .rules-modal {\r\n    background: white;\r\n    position: fixed;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    padding: 4em 0;\r\n\r\n    h2 {\r\n      color: #3b4262;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n      letter-spacing: --2px;\r\n      margin-bottom: 1em;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    .button {\r\n      position: fixed;\r\n      right: 2em;\r\n      bottom: 2em;\r\n    }\r\n\r\n    .rules-modal {\r\n      width: 400px;\r\n      margin: auto;\r\n      top: 0;\r\n      bottom: initial;\r\n      transform: translateY(50%);\r\n      padding: 2em;\r\n      border-radius: 10px;\r\n\r\n      h2 {\r\n        align-self: flex-start;\r\n        font-size: 32px;\r\n        margin: 0 0 1.2em 0;\r\n      }\r\n    }\r\n\r\n    .close-btn {\r\n      position: absolute;\r\n      right: 2em;\r\n      top: 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Rules = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  function handleToggleClick() {\r\n    setVisible(!visible);\r\n  }\r\n  return (\r\n    <RulesStyled visible={visible}>\r\n      {visible && (\r\n        <div className=\"rules-modal\">\r\n          <h2>Rules</h2>\r\n          <img src=\"./images/image-rules.svg\" alt=\"Game rules\" />\r\n          <img\r\n            className=\"close-btn\"\r\n            onClick={handleToggleClick}\r\n            src=\"./images/icon-close.svg\"\r\n            alt=\"Close the game rules\"\r\n          />\r\n        </div>\r\n      )}\r\n      <Button className=\"button\" onClick={handleToggleClick}>\r\n        Rules\r\n      </Button>\r\n    </RulesStyled>\r\n  );\r\n};\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Header } from \"./components/Header\";\nimport { Wrapper } from \"./components/Wrapper\";\nimport { Table } from \"components/Table\";\nimport { Rules } from \"components/Rules\";\nimport { ScoreContextProvider } from \"context/ScoreContext\";\n\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle at top, #1f3757 20%, #131537 100%);\n\n  .app-content {\n    padding: 2em;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\nfunction App() {\n  return (\n    <ScoreContextProvider>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header />\n            <Table />\n            <Rules />\n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}